# CI/CD workflow for setup-liquibase GitHub Action
# Validates code quality, builds the action, and tests it across multiple platforms
name: Continuous Integration

# Trigger workflow on pushes to main branch and all pull requests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job: Code quality checks and build validation
  code-quality-and-build:
    name: Code Quality & Build
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository code
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    # Setup Node.js environment with caching for faster builds
    - name: Setup Node.js Environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    # Install all npm dependencies using package-lock.json for reproducible builds
    - name: Install Dependencies
      run: npm ci
    
    # Run ESLint to check code style and catch potential issues
    - name: Run Code Linting
      run: npm run lint
    
    # Execute unit tests to validate core functionality
    - name: Run Unit Tests
      run: npm test
    
    # Build the TypeScript action into a distributable JavaScript bundle
    - name: Build Action Distribution
      run: npm run build

  # Job: Cross-platform integration testing
  integration-testing:
    name: Integration Tests (${{ matrix.os }})
    # Only run integration tests if code quality checks pass
    needs: code-quality-and-build
    runs-on: ${{ matrix.os }}
    
    # Test matrix: Multiple operating systems with latest Liquibase version
    # This ensures the action works across platforms without testing outdated versions
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    # Checkout the repository code
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    # Setup Node.js environment with caching
    - name: Setup Node.js Environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    # Install dependencies required for building the action
    - name: Install Dependencies
      run: npm ci
    
    # Build the action since integration tests use the local action
    - name: Build Action for Testing
      run: npm run build
    
    # Test the actual setup-liquibase action with latest version (auto-detects OSS edition)
    - name: Test Liquibase Setup Action
      uses: ./
      with:
        version: 'latest'
        cache: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Run Liquibase update against H2 database using the example changelog
    - name: Run Liquibase Update (H2)
      run: |
        liquibase update \
          --changelog-file=changelog.xml \
          --url=jdbc:h2:mem:test \
          --username=sa \
          --password=

    # Verify the update by checking the history
    - name: Verify Liquibase History (H2)
      run: |
        liquibase history \
          --url=jdbc:h2:mem:test \
          --username=sa \
          --password=